// Copyright 2010-2022 Google LLC
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package operations_research.packing;

option java_multiple_files = true;


// A Multiple Dimension BinPacking problem.
// It supports the following file format:
//  - 2bp:
//    see http://or.dei.unibo.it/library/two-dimensional-bin-packing-problem
//
// The generated problems have the following characteristics:
//
// You have identical boxes with n dimensions. The size of one box is stored in
// the field box_shape().
// You need to fit all items into the minimum number of boxes. Each item has the
// same number of dimensions and one or more possible shapes (this usually means
// that you can rotate the item).
// Each item must not overlap (in n dimensions) with any other item.

// The shape of one item. each edge is parallel to one axis of a dimension.
// One shape cannot be rotated, the item itself will contain multiple rotated
// shapes.
message MultipleDimensionsBinPackingShape {
  repeated int64 dimensions = 1;
}

// Items with multiple shapes often means that they can be rotated.
message MultipleDimensionsBinPackingItem {
  // All available shapes of the item.
  repeated MultipleDimensionsBinPackingShape shapes = 1;

  // The value of the item (useful when solving the problem as a knapsack).
  int64 value = 2;
}

// The full problem: the enclosing box and the list of items.
message MultipleDimensionsBinPackingProblem {
  // The enclosing shape.
  MultipleDimensionsBinPackingShape box_shape = 1;

  // All available items of the problem.
  repeated MultipleDimensionsBinPackingItem items = 2;
}
