# Copyright 2010-2025 Google LLC
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@pip_deps//:requirements.bzl", "requirement")
load("@rules_cc//cc:cc_test.bzl", "cc_test")
load("@rules_go//go:def.bzl", "go_binary")
load("@rules_java//java:java_binary.bzl", "java_binary")
load("@rules_python//python:py_test.bzl", "py_test")

py_test(
    name = "all_different_except_zero_sample_sat_py3",
    srcs = ["all_different_except_zero_sample_sat.py"],
    main = "all_different_except_zero_sample_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

cc_test(
    name = "assignment_sat_test",
    srcs = ["assignment_sat.cc"],
    deps = [
        "//ortools/base",
        "//ortools/base:logging",
        "//ortools/sat:cp_model",
        "//ortools/sat:cp_model_cc_proto",
        "//ortools/sat:cp_model_solver",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
    ],
)

py_test(
    name = "assignment_sat_py3",
    srcs = ["assignment_sat.py"],
    main = "assignment_sat.py",
    deps = [
        requirement("pandas"),
        "//ortools/sat/python:cp_model",
    ],
)

cc_test(
    name = "assignment_groups_sat_test",
    srcs = ["assignment_groups_sat.cc"],
    deps = [
        "//ortools/base",
        "//ortools/base:logging",
        "//ortools/sat:cp_model",
        "//ortools/sat:cp_model_cc_proto",
        "//ortools/sat:cp_model_solver",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
        "@abseil-cpp//absl/strings:str_format",
        "@abseil-cpp//absl/types:span",
    ],
)

py_test(
    name = "assignment_groups_sat_py3",
    srcs = ["assignment_groups_sat.py"],
    main = "assignment_groups_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

cc_test(
    name = "assignment_task_sizes_sat_test",
    srcs = ["assignment_task_sizes_sat.cc"],
    deps = [
        "//ortools/base",
        "//ortools/base:logging",
        "//ortools/sat:cp_model",
        "//ortools/sat:cp_model_cc_proto",
        "//ortools/sat:cp_model_solver",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
        "@abseil-cpp//absl/strings:str_format",
    ],
)

py_test(
    name = "assignment_task_sizes_sat_py3",
    srcs = ["assignment_task_sizes_sat.py"],
    main = "assignment_task_sizes_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

cc_test(
    name = "assignment_teams_sat_test",
    srcs = ["assignment_teams_sat.cc"],
    deps = [
        "//ortools/base",
        "//ortools/base:logging",
        "//ortools/sat:cp_model",
        "//ortools/sat:cp_model_cc_proto",
        "//ortools/sat:cp_model_solver",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
        "@abseil-cpp//absl/strings:str_format",
    ],
)

py_test(
    name = "assignment_teams_sat_py3",
    srcs = ["assignment_teams_sat.py"],
    main = "assignment_teams_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

cc_test(
    name = "assumptions_sample_sat_test",
    srcs = ["assumptions_sample_sat.cc"],
    deps = [
        "//ortools/base",
        "//ortools/base:logging",
        "//ortools/sat:cp_model",
        "//ortools/sat:cp_model_cc_proto",
        "//ortools/sat:cp_model_solver",
        "//ortools/util:sorted_interval_list",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
        "@abseil-cpp//absl/types:span",
    ],
)

go_binary(
    name = "assumptions_sample_sat_go",
    srcs = ["assumptions_sample_sat.go"],
    deps = [
        "//ortools/sat:cp_model_go_proto",
        "//ortools/sat/go/cpmodel",
        "@com_github_golang_glog//:glog",
    ],
)

py_test(
    name = "assumptions_sample_sat_py3",
    srcs = ["assumptions_sample_sat.py"],
    main = "assumptions_sample_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

cc_test(
    name = "binpacking_problem_sat_test",
    srcs = ["binpacking_problem_sat.cc"],
    deps = [
        "//ortools/base",
        "//ortools/base:logging",
        "//ortools/sat:cp_model",
        "//ortools/sat:cp_model_cc_proto",
        "//ortools/sat:cp_model_solver",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
    ],
)

go_binary(
    name = "binpacking_problem_sat_go",
    srcs = ["binpacking_problem_sat.go"],
    deps = [
        "//ortools/sat/go/cpmodel",
        "@com_github_golang_glog//:glog",
    ],
)

py_test(
    name = "binpacking_problem_sat_py3",
    srcs = ["binpacking_problem_sat.py"],
    main = "binpacking_problem_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

py_test(
    name = "bin_packing_sat_py3",
    srcs = ["bin_packing_sat.py"],
    main = "bin_packing_sat.py",
    deps = [
        requirement("pandas"),
        "//ortools/sat/python:cp_model",
    ],
)

py_test(
    name = "bool_and_int_var_product_sample_sat_py3",
    srcs = ["bool_and_int_var_product_sample_sat.py"],
    main = "bool_and_int_var_product_sample_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

cc_test(
    name = "bool_or_sample_sat_test",
    srcs = ["bool_or_sample_sat.cc"],
    deps = [
        "//ortools/base",
        "//ortools/sat:cp_model",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
        "@abseil-cpp//absl/types:span",
    ],
)

go_binary(
    name = "bool_or_sample_sat_go",
    srcs = ["bool_or_sample_sat.go"],
    deps = ["//ortools/sat/go/cpmodel"],
)

py_test(
    name = "bool_or_sample_sat_py3",
    srcs = ["bool_or_sample_sat.py"],
    main = "bool_or_sample_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

go_binary(
    name = "boolean_product_sample_sat_go",
    srcs = ["boolean_product_sample_sat.go"],
    deps = [
        "//ortools/sat:sat_parameters_go_proto",
        "//ortools/sat/go/cpmodel",
        "@com_github_golang_glog//:glog",
        "@org_golang_google_protobuf//proto",
    ],
)

py_test(
    name = "boolean_product_sample_sat_py3",
    srcs = ["boolean_product_sample_sat.py"],
    main = "boolean_product_sample_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

cc_test(
    name = "channeling_sample_sat_test",
    srcs = ["channeling_sample_sat.cc"],
    deps = [
        "//ortools/base",
        "//ortools/base:logging",
        "//ortools/sat:cp_model",
        "//ortools/sat:cp_model_cc_proto",
        "//ortools/sat:cp_model_solver",
        "//ortools/sat:model",
        "//ortools/sat:sat_parameters_cc_proto",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
        "@abseil-cpp//absl/types:span",
    ],
)

go_binary(
    name = "channeling_sample_sat_go",
    srcs = ["channeling_sample_sat.go"],
    deps = [
        "//ortools/sat:cp_model_go_proto",
        "//ortools/sat:sat_parameters_go_proto",
        "//ortools/sat/go/cpmodel",
        "@com_github_golang_glog//:glog",
        "@org_golang_google_protobuf//proto",
    ],
)

py_test(
    name = "channeling_sample_sat_py3",
    srcs = ["channeling_sample_sat.py"],
    main = "channeling_sample_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

cc_test(
    name = "clone_model_sample_sat_test",
    srcs = ["clone_model_sample_sat.cc"],
    deps = [
        "//ortools/base",
        "//ortools/base:logging",
        "//ortools/sat:cp_model",
        "//ortools/sat:cp_model_cc_proto",
        "//ortools/sat:cp_model_solver",
        "//ortools/util:sorted_interval_list",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
    ],
)

py_test(
    name = "clone_model_sample_sat_py3",
    srcs = ["clone_model_sample_sat.py"],
    main = "clone_model_sample_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

cc_test(
    name = "cp_is_fun_sat_test",
    srcs = ["cp_is_fun_sat.cc"],
    deps = [
        "//ortools/base",
        "//ortools/base:logging",
        "//ortools/sat:cp_model",
        "//ortools/sat:cp_model_cc_proto",
        "//ortools/sat:cp_model_solver",
        "//ortools/sat:model",
        "//ortools/sat:sat_parameters_cc_proto",
        "//ortools/util:sorted_interval_list",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
    ],
)

py_test(
    name = "cp_is_fun_sat_py3",
    srcs = ["cp_is_fun_sat.py"],
    main = "cp_is_fun_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

cc_test(
    name = "cp_sat_example_test",
    srcs = ["cp_sat_example.cc"],
    deps = [
        "//ortools/base",
        "//ortools/base:logging",
        "//ortools/sat:cp_model",
        "//ortools/sat:cp_model_cc_proto",
        "//ortools/sat:cp_model_solver",
        "//ortools/util:sorted_interval_list",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
    ],
)

py_test(
    name = "cp_sat_example_py3",
    srcs = ["cp_sat_example.py"],
    main = "cp_sat_example.py",
    deps = ["//ortools/sat/python:cp_model"],
)

py_test(
    name = "cumulative_variable_profile_sample_sat_py3",
    srcs = ["cumulative_variable_profile_sample_sat.py"],
    main = "cumulative_variable_profile_sample_sat.py",
    deps = [
        requirement("absl-py"),
        requirement("pandas"),
        "//ortools/sat/python:cp_model",
    ],
)

cc_test(
    name = "earliness_tardiness_cost_sample_sat_test",
    srcs = ["earliness_tardiness_cost_sample_sat.cc"],
    deps = [
        "//ortools/base",
        "//ortools/base:logging",
        "//ortools/sat:cp_model",
        "//ortools/sat:cp_model_cc_proto",
        "//ortools/sat:cp_model_solver",
        "//ortools/sat:model",
        "//ortools/sat:sat_parameters_cc_proto",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
        "@abseil-cpp//absl/types:span",
    ],
)

go_binary(
    name = "earliness_tardiness_cost_sample_sat_go",
    srcs = ["earliness_tardiness_cost_sample_sat.go"],
    deps = [
        "//ortools/sat:cp_model_go_proto",
        "//ortools/sat:sat_parameters_go_proto",
        "//ortools/sat/go/cpmodel",
        "@com_github_golang_glog//:glog",
        "@org_golang_google_protobuf//proto",
    ],
)

py_test(
    name = "earliness_tardiness_cost_sample_sat_py3",
    srcs = ["earliness_tardiness_cost_sample_sat.py"],
    main = "earliness_tardiness_cost_sample_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

cc_test(
    name = "interval_sample_sat_test",
    srcs = ["interval_sample_sat.cc"],
    deps = [
        "//ortools/base",
        "//ortools/base:logging",
        "//ortools/sat:cp_model",
        "//ortools/util:sorted_interval_list",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
    ],
)

go_binary(
    name = "interval_sample_sat_go",
    srcs = ["interval_sample_sat.go"],
    deps = [
        "//ortools/sat/go/cpmodel",
        "@com_github_golang_glog//:glog",
    ],
)

py_test(
    name = "interval_sample_sat_py3",
    srcs = ["interval_sample_sat.py"],
    main = "interval_sample_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

py_test(
    name = "interval_relations_sample_sat_py3",
    srcs = ["interval_relations_sample_sat.py"],
    main = "interval_relations_sample_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

py_test(
    name = "index_first_boolvar_true_sample_sat_py3",
    srcs = ["index_first_boolvar_true_sample_sat.py"],
    main = "index_first_boolvar_true_sample_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

cc_test(
    name = "minimal_jobshop_sat_test",
    srcs = ["minimal_jobshop_sat.cc"],
    deps = [
        "//ortools/base",
        "//ortools/base:logging",
        "//ortools/sat:cp_model",
        "//ortools/sat:cp_model_cc_proto",
        "//ortools/sat:cp_model_solver",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
        "@abseil-cpp//absl/strings:str_format",
    ],
)

py_test(
    name = "minimal_jobshop_sat_py3",
    srcs = ["minimal_jobshop_sat.py"],
    main = "minimal_jobshop_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

cc_test(
    name = "literal_sample_sat_test",
    srcs = ["literal_sample_sat.cc"],
    deps = [
        "//ortools/base",
        "//ortools/base:logging",
        "//ortools/sat:cp_model",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
    ],
)

go_binary(
    name = "literal_sample_sat_go",
    srcs = ["literal_sample_sat.go"],
    deps = [
        "//ortools/sat/go/cpmodel",
        "@com_github_golang_glog//:glog",
    ],
)

py_test(
    name = "literal_sample_sat_py3",
    srcs = ["literal_sample_sat.py"],
    main = "literal_sample_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

cc_test(
    name = "multiple_knapsack_sat_test",
    srcs = ["multiple_knapsack_sat.cc"],
    deps = [
        "//ortools/base",
        "//ortools/base:logging",
        "//ortools/sat:cp_model",
        "//ortools/sat:cp_model_cc_proto",
        "//ortools/sat:cp_model_solver",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
        "@abseil-cpp//absl/strings:str_format",
    ],
)

py_test(
    name = "multiple_knapsack_sat_py3",
    srcs = ["multiple_knapsack_sat.py"],
    main = "multiple_knapsack_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

cc_test(
    name = "non_linear_sat_test",
    srcs = ["non_linear_sat.cc"],
    deps = [
        "//ortools/base",
        "//ortools/base:logging",
        "//ortools/sat:cp_model",
        "//ortools/sat:cp_model_solver",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
    ],
)

py_test(
    name = "non_linear_sat_py3",
    srcs = ["non_linear_sat.py"],
    main = "non_linear_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

cc_test(
    name = "nqueens_sat_test",
    srcs = ["nqueens_sat.cc"],
    deps = [
        "//ortools/base",
        "//ortools/base:logging",
        "//ortools/sat:cp_model",
        "//ortools/sat:cp_model_cc_proto",
        "//ortools/sat:cp_model_solver",
        "//ortools/sat:model",
        "//ortools/sat:sat_parameters_cc_proto",
        "//ortools/util:sorted_interval_list",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
        "@abseil-cpp//absl/strings",
    ],
)

go_binary(
    name = "nqueens_sat_go",
    srcs = ["nqueens_sat.go"],
    deps = [
        "//ortools/sat/go/cpmodel",
        "@com_github_golang_glog//:glog",
    ],
)

py_test(
    name = "nqueens_sat_py3",
    srcs = ["nqueens_sat.py"],
    main = "nqueens_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

cc_test(
    name = "nurses_sat_test",
    srcs = ["nurses_sat.cc"],
    deps = [
        "//ortools/base",
        "//ortools/base:logging",
        "//ortools/sat:cp_model",
        "//ortools/sat:cp_model_cc_proto",
        "//ortools/sat:cp_model_solver",
        "//ortools/sat:model",
        "//ortools/sat:sat_parameters_cc_proto",
        "//ortools/util:time_limit",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
        "@abseil-cpp//absl/strings:str_format",
    ],
)

go_binary(
    name = "nurses_sat_go",
    srcs = ["nurses_sat.go"],
    deps = [
        "//ortools/sat/go/cpmodel",
        "@com_github_golang_glog//:glog",
    ],
)

py_test(
    name = "nurses_sat_py3",
    srcs = ["nurses_sat.py"],
    main = "nurses_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

cc_test(
    name = "optional_interval_sample_sat_test",
    srcs = ["optional_interval_sample_sat.cc"],
    deps = [
        "//ortools/base",
        "//ortools/base:logging",
        "//ortools/sat:cp_model",
        "//ortools/util:sorted_interval_list",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
    ],
)

go_binary(
    name = "optional_interval_sample_sat_go",
    srcs = ["optional_interval_sample_sat.go"],
    deps = [
        "//ortools/sat/go/cpmodel",
        "@com_github_golang_glog//:glog",
    ],
)

py_test(
    name = "optional_interval_sample_sat_py3",
    srcs = ["optional_interval_sample_sat.py"],
    main = "optional_interval_sample_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

cc_test(
    name = "no_overlap_sample_sat_test",
    srcs = ["no_overlap_sample_sat.cc"],
    deps = [
        "//ortools/base",
        "//ortools/base:logging",
        "//ortools/sat:cp_model",
        "//ortools/sat:cp_model_cc_proto",
        "//ortools/sat:cp_model_solver",
        "//ortools/sat:model",
        "//ortools/util:sorted_interval_list",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
        "@abseil-cpp//absl/types:span",
    ],
)

go_binary(
    name = "no_overlap_sample_sat_go",
    srcs = ["no_overlap_sample_sat.go"],
    deps = [
        "//ortools/sat:cp_model_go_proto",
        "//ortools/sat/go/cpmodel",
        "@com_github_golang_glog//:glog",
    ],
)

py_test(
    name = "no_overlap_sample_sat_py3",
    srcs = ["no_overlap_sample_sat.py"],
    main = "no_overlap_sample_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

py_test(
    name = "overlapping_intervals_sample_sat_py3",
    srcs = ["overlapping_intervals_sample_sat.py"],
    main = "overlapping_intervals_sample_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

cc_test(
    name = "rabbits_and_pheasants_sat_test",
    srcs = ["rabbits_and_pheasants_sat.cc"],
    deps = [
        "//ortools/base",
        "//ortools/base:logging",
        "//ortools/sat:cp_model",
        "//ortools/sat:cp_model_cc_proto",
        "//ortools/sat:cp_model_solver",
        "//ortools/util:sorted_interval_list",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
    ],
)

go_binary(
    name = "rabbits_and_pheasants_sat_go",
    srcs = ["rabbits_and_pheasants_sat.go"],
    deps = [
        "//ortools/sat:cp_model_go_proto",
        "//ortools/sat/go/cpmodel",
        "@com_github_golang_glog//:glog",
    ],
)

py_test(
    name = "rabbits_and_pheasants_sat_py3",
    srcs = ["rabbits_and_pheasants_sat.py"],
    main = "rabbits_and_pheasants_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

py_test(
    name = "ranking_circuit_sample_sat_py3",
    srcs = ["ranking_circuit_sample_sat.py"],
    main = "ranking_circuit_sample_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

cc_test(
    name = "ranking_sample_sat_test",
    srcs = ["ranking_sample_sat.cc"],
    deps = [
        "//ortools/base",
        "//ortools/base:logging",
        "//ortools/sat:cp_model",
        "//ortools/sat:cp_model_cc_proto",
        "//ortools/sat:cp_model_solver",
        "//ortools/util:sorted_interval_list",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
        "@abseil-cpp//absl/types:span",
    ],
)

go_binary(
    name = "ranking_sample_sat_go",
    srcs = ["ranking_sample_sat.go"],
    deps = [
        "//ortools/sat:cp_model_go_proto",
        "//ortools/sat/go/cpmodel",
        "@com_github_golang_glog//:glog",
    ],
)

py_test(
    name = "ranking_sample_sat_py3",
    srcs = ["ranking_sample_sat.py"],
    main = "ranking_sample_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

cc_test(
    name = "reified_sample_sat_test",
    srcs = ["reified_sample_sat.cc"],
    deps = [
        "//ortools/base",
        "//ortools/sat:cp_model",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
        "@abseil-cpp//absl/types:span",
    ],
)

go_binary(
    name = "reified_sample_sat_go",
    srcs = ["reified_sample_sat.go"],
    deps = ["//ortools/sat/go/cpmodel"],
)

py_test(
    name = "reified_sample_sat_py3",
    srcs = ["reified_sample_sat.py"],
    main = "reified_sample_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

cc_test(
    name = "schedule_requests_sat_test",
    srcs = ["schedule_requests_sat.cc"],
    deps = [
        "//ortools/base",
        "//ortools/base:logging",
        "//ortools/sat:cp_model",
        "//ortools/sat:cp_model_cc_proto",
        "//ortools/sat:cp_model_solver",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
        "@abseil-cpp//absl/strings:str_format",
    ],
)

py_test(
    name = "schedule_requests_sat_py3",
    srcs = ["schedule_requests_sat.py"],
    main = "schedule_requests_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

py_test(
    name = "scheduling_with_calendar_sample_sat_py3",
    srcs = ["scheduling_with_calendar_sample_sat.py"],
    main = "scheduling_with_calendar_sample_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

cc_test(
    name = "search_for_all_solutions_sample_sat_test",
    srcs = ["search_for_all_solutions_sample_sat.cc"],
    deps = [
        "//ortools/base",
        "//ortools/base:logging",
        "//ortools/sat:cp_model",
        "//ortools/sat:cp_model_cc_proto",
        "//ortools/sat:cp_model_solver",
        "//ortools/sat:model",
        "//ortools/sat:sat_parameters_cc_proto",
        "//ortools/util:sorted_interval_list",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
    ],
)

go_binary(
    name = "search_for_all_solutions_sample_sat_go",
    srcs = ["search_for_all_solutions_sample_sat.go"],
    deps = [
        "//ortools/sat:sat_parameters_go_proto",
        "//ortools/sat/go/cpmodel",
        "@com_github_golang_glog//:glog",
        "@org_golang_google_protobuf//proto",
    ],
)

py_test(
    name = "search_for_all_solutions_sample_sat_py3",
    srcs = ["search_for_all_solutions_sample_sat.py"],
    main = "search_for_all_solutions_sample_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

py_test(
    name = "sequences_in_no_overlap_sample_sat_py3",
    srcs = ["sequences_in_no_overlap_sample_sat.py"],
    main = "sequences_in_no_overlap_sample_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

cc_test(
    name = "simple_sat_program_test",
    srcs = ["simple_sat_program.cc"],
    deps = [
        "//ortools/base",
        "//ortools/base:logging",
        "//ortools/sat:cp_model",
        "//ortools/sat:cp_model_cc_proto",
        "//ortools/sat:cp_model_solver",
        "//ortools/util:sorted_interval_list",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
    ],
)

go_binary(
    name = "simple_sat_program_go",
    srcs = ["simple_sat_program.go"],
    deps = [
        "//ortools/sat:cp_model_go_proto",
        "//ortools/sat/go/cpmodel",
        "@com_github_golang_glog//:glog",
    ],
)

py_test(
    name = "simple_sat_program_py3",
    srcs = ["simple_sat_program.py"],
    main = "simple_sat_program.py",
    deps = ["//ortools/sat/python:cp_model"],
)

cc_test(
    name = "solution_hinting_sample_sat_test",
    srcs = ["solution_hinting_sample_sat.cc"],
    deps = [
        "//ortools/base",
        "//ortools/base:logging",
        "//ortools/sat:cp_model",
        "//ortools/sat:cp_model_cc_proto",
        "//ortools/sat:cp_model_solver",
        "//ortools/sat:model",
        "//ortools/util:sorted_interval_list",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
    ],
)

go_binary(
    name = "solution_hinting_sample_sat_go",
    srcs = ["solution_hinting_sample_sat.go"],
    deps = [
        "//ortools/sat:cp_model_go_proto",
        "//ortools/sat/go/cpmodel",
        "@com_github_golang_glog//:glog",
    ],
)

py_test(
    name = "solution_hinting_sample_sat_py3",
    srcs = ["solution_hinting_sample_sat.py"],
    main = "solution_hinting_sample_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

cc_test(
    name = "solve_and_print_intermediate_solutions_sample_sat_test",
    srcs = ["solve_and_print_intermediate_solutions_sample_sat.cc"],
    deps = [
        "//ortools/base",
        "//ortools/base:logging",
        "//ortools/sat:cp_model",
        "//ortools/sat:cp_model_cc_proto",
        "//ortools/sat:cp_model_solver",
        "//ortools/sat:model",
        "//ortools/util:sorted_interval_list",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
    ],
)

go_binary(
    name = "solve_and_print_intermediate_solutions_sample_sat_go",
    srcs = ["solve_and_print_intermediate_solutions_sample_sat.go"],
    deps = [
        "//ortools/sat:sat_parameters_go_proto",
        "//ortools/sat/go/cpmodel",
        "@com_github_golang_glog//:glog",
        "@org_golang_google_protobuf//proto",
    ],
)

py_test(
    name = "solve_and_print_intermediate_solutions_sample_sat_py3",
    srcs = ["solve_and_print_intermediate_solutions_sample_sat.py"],
    main = "solve_and_print_intermediate_solutions_sample_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

cc_test(
    name = "step_function_sample_sat_test",
    srcs = ["step_function_sample_sat.cc"],
    deps = [
        "//ortools/base",
        "//ortools/base:logging",
        "//ortools/sat:cp_model",
        "//ortools/sat:cp_model_cc_proto",
        "//ortools/sat:cp_model_solver",
        "//ortools/sat:model",
        "//ortools/sat:sat_parameters_cc_proto",
        "//ortools/util:sorted_interval_list",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
        "@abseil-cpp//absl/types:span",
    ],
)

go_binary(
    name = "step_function_sample_sat_go",
    srcs = ["step_function_sample_sat.go"],
    deps = [
        "//ortools/sat:cp_model_go_proto",
        "//ortools/sat:sat_parameters_go_proto",
        "//ortools/sat/go/cpmodel",
        "@com_github_golang_glog//:glog",
        "@org_golang_google_protobuf//proto",
    ],
)

py_test(
    name = "step_function_sample_sat_py3",
    srcs = ["step_function_sample_sat.py"],
    main = "step_function_sample_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

cc_test(
    name = "solve_with_time_limit_sample_sat_test",
    srcs = ["solve_with_time_limit_sample_sat.cc"],
    deps = [
        "//ortools/base",
        "//ortools/base:logging",
        "//ortools/sat:cp_model",
        "//ortools/sat:cp_model_cc_proto",
        "//ortools/sat:cp_model_solver",
        "//ortools/sat:model",
        "//ortools/sat:sat_parameters_cc_proto",
        "//ortools/util:sorted_interval_list",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
    ],
)

go_binary(
    name = "solve_with_time_limit_sample_sat_go",
    srcs = ["solve_with_time_limit_sample_sat.go"],
    deps = [
        "//ortools/sat:cp_model_go_proto",
        "//ortools/sat:sat_parameters_go_proto",
        "//ortools/sat/go/cpmodel",
        "@com_github_golang_glog//:glog",
        "@org_golang_google_protobuf//proto",
    ],
)

py_test(
    name = "solve_with_time_limit_sample_sat_py3",
    srcs = ["solve_with_time_limit_sample_sat.py"],
    main = "solve_with_time_limit_sample_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

cc_test(
    name = "stop_after_n_solutions_sample_sat_test",
    srcs = ["stop_after_n_solutions_sample_sat.cc"],
    deps = [
        "//ortools/base",
        "//ortools/base:logging",
        "//ortools/sat:cp_model",
        "//ortools/sat:cp_model_cc_proto",
        "//ortools/sat:cp_model_solver",
        "//ortools/sat:model",
        "//ortools/sat:sat_parameters_cc_proto",
        "//ortools/util:sorted_interval_list",
        "//ortools/util:time_limit",
        "@abseil-cpp//absl/base:log_severity",
        "@abseil-cpp//absl/log:globals",
    ],
)

py_test(
    name = "stop_after_n_solutions_sample_sat_py3",
    srcs = ["stop_after_n_solutions_sample_sat.py"],
    main = "stop_after_n_solutions_sample_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

py_test(
    name = "transitions_in_no_overlap_sample_sat_py3",
    srcs = ["transitions_in_no_overlap_sample_sat.py"],
    main = "transitions_in_no_overlap_sample_sat.py",
    deps = ["//ortools/sat/python:cp_model"],
)

java_binary(
    name = "AssignmentGroupsSat",
    srcs = ["AssignmentGroupsSat.java"],
    main_class = "com.google.ortools.sat.samples.AssignmentGroupsSat",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
        "//ortools/sat:cp_model_java_proto",
    ],
)

java_binary(
    name = "AssignmentSat",
    srcs = ["AssignmentSat.java"],
    main_class = "com.google.ortools.sat.samples.AssignmentSat",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
        "//ortools/sat:cp_model_java_proto",
    ],
)

java_binary(
    name = "AssignmentTaskSizesSat",
    srcs = ["AssignmentTaskSizesSat.java"],
    main_class = "com.google.ortools.sat.samples.AssignmentTaskSizesSat",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
        "//ortools/sat:cp_model_java_proto",
    ],
)

java_binary(
    name = "AssignmentTeamsSat",
    srcs = ["AssignmentTeamsSat.java"],
    main_class = "com.google.ortools.sat.samples.AssignmentTeamsSat",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
        "//ortools/sat:cp_model_java_proto",
    ],
)

java_binary(
    name = "AssumptionsSampleSat",
    srcs = ["AssumptionsSampleSat.java"],
    main_class = "com.google.ortools.sat.samples.AssumptionsSampleSat",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
        "//ortools/sat:cp_model_java_proto",
    ],
)

java_binary(
    name = "BinPackingProblemSat",
    srcs = ["BinPackingProblemSat.java"],
    main_class = "com.google.ortools.sat.samples.BinPackingProblemSat",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
        "//ortools/sat:cp_model_java_proto",
    ],
)

java_binary(
    name = "BoolOrSampleSat",
    srcs = ["BoolOrSampleSat.java"],
    main_class = "com.google.ortools.sat.samples.BoolOrSampleSat",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
    ],
)

java_binary(
    name = "ChannelingSampleSat",
    srcs = ["ChannelingSampleSat.java"],
    main_class = "com.google.ortools.sat.samples.ChannelingSampleSat",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
        "//ortools/sat:cp_model_java_proto",
        "//ortools/sat:sat_parameters_java_proto",
    ],
)

java_binary(
    name = "CloneModelSampleSat",
    srcs = ["CloneModelSampleSat.java"],
    main_class = "com.google.ortools.sat.samples.CloneModelSampleSat",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
        "//ortools/sat:cp_model_java_proto",
    ],
)

java_binary(
    name = "CpIsFunSat",
    srcs = ["CpIsFunSat.java"],
    main_class = "com.google.ortools.sat.samples.CpIsFunSat",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
        "//ortools/sat:cp_model_java_proto",
    ],
)

java_binary(
    name = "CpSatExample",
    srcs = ["CpSatExample.java"],
    main_class = "com.google.ortools.sat.samples.CpSatExample",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
        "//ortools/sat:cp_model_java_proto",
    ],
)

java_binary(
    name = "EarlinessTardinessCostSampleSat",
    srcs = ["EarlinessTardinessCostSampleSat.java"],
    main_class = "com.google.ortools.sat.samples.EarlinessTardinessCostSampleSat",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
        "//ortools/sat:cp_model_java_proto",
        "//ortools/sat:sat_parameters_java_proto",
    ],
)

java_binary(
    name = "IntervalSampleSat",
    srcs = ["IntervalSampleSat.java"],
    main_class = "com.google.ortools.sat.samples.IntervalSampleSat",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
    ],
)

java_binary(
    name = "LiteralSampleSat",
    srcs = ["LiteralSampleSat.java"],
    main_class = "com.google.ortools.sat.samples.LiteralSampleSat",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
    ],
)

java_binary(
    name = "MinimalJobshopSat",
    srcs = ["MinimalJobshopSat.java"],
    main_class = "com.google.ortools.sat.samples.MinimalJobshopSat",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
        "//ortools/sat:cp_model_java_proto",
    ],
)

java_binary(
    name = "MultipleKnapsackSat",
    srcs = ["MultipleKnapsackSat.java"],
    main_class = "com.google.ortools.sat.samples.MultipleKnapsackSat",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
        "//ortools/sat:cp_model_java_proto",
    ],
)

java_binary(
    name = "NQueensSat",
    srcs = ["NQueensSat.java"],
    main_class = "com.google.ortools.sat.samples.NQueensSat",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
        "//ortools/sat:cp_model_java_proto",
    ],
)

java_binary(
    name = "NoOverlapSampleSat",
    srcs = ["NoOverlapSampleSat.java"],
    main_class = "com.google.ortools.sat.samples.NoOverlapSampleSat",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
        "//ortools/sat:cp_model_java_proto",
    ],
)

java_binary(
    name = "NonLinearSat",
    srcs = ["NonLinearSat.java"],
    main_class = "com.google.ortools.sat.samples.NonLinearSat",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
        "//ortools/sat:cp_model_java_proto",
    ],
)

java_binary(
    name = "NursesSat",
    srcs = ["NursesSat.java"],
    main_class = "com.google.ortools.sat.samples.NursesSat",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
        "//ortools/sat:cp_model_java_proto",
    ],
)

java_binary(
    name = "OptionalIntervalSampleSat",
    srcs = ["OptionalIntervalSampleSat.java"],
    main_class = "com.google.ortools.sat.samples.OptionalIntervalSampleSat",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
    ],
)

java_binary(
    name = "RabbitsAndPheasantsSat",
    srcs = ["RabbitsAndPheasantsSat.java"],
    main_class = "com.google.ortools.sat.samples.RabbitsAndPheasantsSat",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
        "//ortools/sat:cp_model_java_proto",
    ],
)

java_binary(
    name = "RankingSampleSat",
    srcs = ["RankingSampleSat.java"],
    main_class = "com.google.ortools.sat.samples.RankingSampleSat",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
        "//ortools/sat:cp_model_java_proto",
    ],
)

java_binary(
    name = "ReifiedSampleSat",
    srcs = ["ReifiedSampleSat.java"],
    main_class = "com.google.ortools.sat.samples.ReifiedSampleSat",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
    ],
)

java_binary(
    name = "ScheduleRequestsSat",
    srcs = ["ScheduleRequestsSat.java"],
    main_class = "com.google.ortools.sat.samples.ScheduleRequestsSat",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
        "//ortools/sat:cp_model_java_proto",
    ],
)

java_binary(
    name = "SearchForAllSolutionsSampleSat",
    srcs = ["SearchForAllSolutionsSampleSat.java"],
    main_class = "com.google.ortools.sat.samples.SearchForAllSolutionsSampleSat",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
        "//ortools/sat:cp_model_java_proto",
    ],
)

java_binary(
    name = "SimpleSatProgram",
    srcs = ["SimpleSatProgram.java"],
    main_class = "com.google.ortools.sat.samples.SimpleSatProgram",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
        "//ortools/sat:cp_model_java_proto",
    ],
)

java_binary(
    name = "SolutionHintingSampleSat",
    srcs = ["SolutionHintingSampleSat.java"],
    main_class = "com.google.ortools.sat.samples.SolutionHintingSampleSat",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
        "//ortools/sat:cp_model_java_proto",
    ],
)

java_binary(
    name = "SolveAndPrintIntermediateSolutionsSampleSat",
    srcs = ["SolveAndPrintIntermediateSolutionsSampleSat.java"],
    main_class = "com.google.ortools.sat.samples.SolveAndPrintIntermediateSolutionsSampleSat",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
        "//ortools/sat:cp_model_java_proto",
    ],
)

java_binary(
    name = "SolveWithTimeLimitSampleSat",
    srcs = ["SolveWithTimeLimitSampleSat.java"],
    main_class = "com.google.ortools.sat.samples.SolveWithTimeLimitSampleSat",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
        "//ortools/sat:cp_model_java_proto",
    ],
)

java_binary(
    name = "StepFunctionSampleSat",
    srcs = ["StepFunctionSampleSat.java"],
    main_class = "com.google.ortools.sat.samples.StepFunctionSampleSat",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
        "//ortools/sat:cp_model_java_proto",
        "//ortools/sat:sat_parameters_java_proto",
        "//ortools/util/java:sorted_interval_list",
    ],
)

java_binary(
    name = "StopAfterNSolutionsSampleSat",
    srcs = ["StopAfterNSolutionsSampleSat.java"],
    main_class = "com.google.ortools.sat.samples.StopAfterNSolutionsSampleSat",
    deps = [
        "//ortools/java/com/google/ortools:Loader",
        "//ortools/java/com/google/ortools/sat",
        "//ortools/sat:cp_model_java_proto",
    ],
)
