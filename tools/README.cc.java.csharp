This file describes how to install the or-tools C++, java and .Net binary
archive.

OR-Tools is located at https://developers.google.com/optimization

These modules have been tested under:
  - Ubuntu 14.04 and 16.04 up (64-bit).
  - Mac OS X El Capitan with Xcode 7.x (64 bit).
  - Microsoft Windows with Visual Studio 2013 and 2015 (64-bit)

Upon decompressing the archive, you will get the following structure:

or-tools/
  LICENSE-2.0.txt  <- Apache License
  README           <- This file
  Makefile/        <- Main makefile for cpp
  examples/        <- C++, java and .Net examples
  lib/             <- directory containing libraries and jar files.
  include/         <- all include files
  objs/            <- directory containing C++ compiled object files (*.o)
  bin/             <- directory containing executable files, and .NET assemblies

 ##########################  C++   ###########################

Use Makefile:

make rcc EX=examples/cpp/golomb.cc

OR :

  - on unix:
make bin/golomb
./bin/golomb

  - on windows:
make bin\\golomb.exe
bin\\golomb.exe


 ##########################  java   ##########################

Running the examples will involve compiling them, then running them.
We have provided a makefile target to help you. You need to have the
java and javac tools accessible from the command line.

make rjava EX=examples/com/google/ortools/samples/RabbitsPheasants.java

This is equivalent to compiling and running
examples/com/google/ortools/samples/RabbitsPheasants.java:

  - on unix:
javac -d objs -cp lib/com.google.ortools.jar:lib/protobuf.jar examples/com/google/ortools/samples/RabbitsPheasants.java
java -Djava.library.path=lib -cp objs:lib/com.google.ortools.jar com.google.ortools.samples.RabbitsPheasants

  - on windows:
javac -d objs -cp lib/com.google.ortools.jar;lib/protobuf.jar examples/com/google/ortools/samples/RabbitsPheasants.java
java -Djava.library.path=lib -cp objs;lib/com.google.ortools.jar com.google.ortools.samples.RabbitsPheasants


 ##########################  .Net   ##########################

Running the examples will involve compiling them, then running them.
We have provided a makefile target to help you. You need to have the
compiler tools accessible from the command line.

make rcs EX=examples/csharp/csflow.cs

This is equivalent to compiling and running examples/csflow.cs and running it:

  - on windows 32 bit:
csc /target:exe /out:bin\csflow.exe /platform:x86 /lib:bin /r:Google.OrTools.dll examples\csharp\csflow.cs
bin\csflow.exe

  - on windows 64 bit:
csc /target:exe /out:bin/csflow.exe /platform:x64 /lib:bin /r:Google.OrTools.dll  examples\csharp\csflow.cs
bin\csflow.exe

  - on linux (mono comes from the distribution, on ubuntu 16.04 and up):
mcs /target:exe /out:bin/csflow.exe /platform:anycpu /lib:bin /r:Google.OrTools.dll examples/csharp/csflow.cs
MONO_PATH=bin mono bin/csflow.exe

  - on Mac OS X (Use installer with version 4.2.1 or up):
mcs /target:exe /out:bin/csflow.exe /platform:anycpu /lib:bin /r:Google.OrTools.dll examples/csharp/csflow.cs
DYLD_FALLBACK_LIBRARY_PATH=lib mono64 bin/csflow.exe
